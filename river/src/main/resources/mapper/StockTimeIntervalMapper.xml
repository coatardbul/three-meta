<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coatardbul.river.mapper.StockTimeIntervalMapper">
    <resultMap id="BaseResultMap" type="com.coatardbul.river.model.entity.StockTimeInterval">
        <!--@mbg.generated-->
        <!--@Table stock_time_interval-->
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="time_str" jdbcType="VARCHAR" property="timeStr"/>
        <result column="interval_type" jdbcType="INTEGER" property="intervalType"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, time_str, interval_type
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from stock_time_interval
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--@mbg.generated-->
        delete
        from stock_time_interval
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.coatardbul.river.model.entity.StockTimeInterval">
        <!--@mbg.generated-->
        insert into stock_time_interval (id, time_str, interval_type)
        values (#{id,jdbcType=VARCHAR}, #{timeStr,jdbcType=VARCHAR}, #{intervalType,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.coatardbul.river.model.entity.StockTimeInterval">
        <!--@mbg.generated-->
        insert into stock_time_interval
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="timeStr != null">
                time_str,
            </if>
            <if test="intervalType != null">
                interval_type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="timeStr != null">
                #{timeStr,jdbcType=VARCHAR},
            </if>
            <if test="intervalType != null">
                #{intervalType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.coatardbul.river.model.entity.StockTimeInterval">
        <!--@mbg.generated-->
        update stock_time_interval
        <set>
            <if test="timeStr != null">
                time_str = #{timeStr,jdbcType=VARCHAR},
            </if>
            <if test="intervalType != null">
                interval_type = #{intervalType,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.coatardbul.river.model.entity.StockTimeInterval">
        <!--@mbg.generated-->
        update stock_time_interval
        set time_str      = #{timeStr,jdbcType=VARCHAR},
            interval_type = #{intervalType,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--auto generated by MybatisCodeHelper on 2022-02-10-->
    <select id="selectAllByIntervalType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_time_interval
        where interval_type = #{intervalType,jdbcType=INTEGER}
        order by time_str asc
    </select>

<!--auto generated by MybatisCodeHelper on 2022-02-10-->
    <delete id="deleteByIntervalType">
        delete from stock_time_interval
        where interval_type=#{intervalType,jdbcType=INTEGER}
    </delete>

<!--auto generated by MybatisCodeHelper on 2022-02-12-->


    <resultMap id="IntervalStatic" type="com.coatardbul.river.model.bo.IntervalStaticBo">
        <result column="interval_type" property="intervalNum"/>
        <result column="time_count" property="timeCount"/>
    </resultMap>

    <select id="selectIntervalStatic" resultMap="IntervalStatic">
        select interval_type,
               count(time_str) as time_count
        from stock_time_interval
        group by interval_type order by interval_type asc
    </select>
</mapper>
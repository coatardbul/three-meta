<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coatardbul.stock.mapper.StockTradeConfigMapper">
  <resultMap id="BaseResultMap" type="com.coatardbul.stock.model.entity.StockTradeConfig">
    <!--@mbg.generated-->
    <!--@Table stock_trade_config-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="simulate_type" jdbcType="VARCHAR" property="simulateType" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="asset_id" jdbcType="VARCHAR" property="assetId" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, simulate_type, user_id, asset_id, sign
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from stock_trade_config
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from stock_trade_config
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.coatardbul.stock.model.entity.StockTradeConfig">
    <!--@mbg.generated-->
    insert into stock_trade_config (id, simulate_type, user_id, 
      asset_id, sign)
    values (#{id,jdbcType=VARCHAR}, #{simulateType,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{assetId,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.coatardbul.stock.model.entity.StockTradeConfig">
    <!--@mbg.generated-->
    insert into stock_trade_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="simulateType != null">
        simulate_type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="assetId != null">
        asset_id,
      </if>
      <if test="sign != null">
        sign,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="simulateType != null">
        #{simulateType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="assetId != null">
        #{assetId,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.coatardbul.stock.model.entity.StockTradeConfig">
    <!--@mbg.generated-->
    update stock_trade_config
    <set>
      <if test="simulateType != null">
        simulate_type = #{simulateType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="assetId != null">
        asset_id = #{assetId,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coatardbul.stock.model.entity.StockTradeConfig">
    <!--@mbg.generated-->
    update stock_trade_config
    set simulate_type = #{simulateType,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      asset_id = #{assetId,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

<!--auto generated by MybatisCodeHelper on 2022-08-04-->
  <select id="selectAllBySign" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stock_trade_config
        where sign=#{sign,jdbcType=VARCHAR}
    </select>

<!--auto generated by MybatisCodeHelper on 2022-08-07-->
  <update id="updateSimulateTypeBySign">
        update stock_trade_config
        set simulate_type=#{updatedSimulateType,jdbcType=VARCHAR}
        where sign=#{sign,jdbcType=VARCHAR}
    </update>
</mapper>